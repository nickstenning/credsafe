#!/usr/bin/env bash
set -e
[ -n "$CREDSAFE_DEBUG" ] && set -x

case "$1" in
"") 
  echo "Usage: credsafe <command> [<args>]

Some useful credsafe commands are:
   add           Add credentials
   commands      List all credsafe commands
   get           Get the value of a credential
   init          Set up the credsafe database   
   list          List credentials
   rm            Remove credentials
   set           Update the value of a credential

See 'credsafe help <command>' for information on a specific command."
;;

"add"|"set")
  echo "Usage: credsafe ${1} <name>

Supply the credential on STDIN, e.g.

  echo 'myPassword123' | credsafe ${1} email

You can arbitrarily nest credential names with slashes, as if you were
creating files in a directory hierarchy:

  echo 'secret' | credsafe ${1} passwords/bank
"

;;

"checkname")
  echo "Usage: credsafe checkname <name>

Returns 0 if name is a valid credential name, 1 otherwise."

;;

"commands")
  echo "Usage: credsafe commands

Lists all available credsafe commands."

;;

"get")
  echo "Usage: credsafe get <name>

Returns the decrypted credential on STDOUT."

;;

"init")
  echo "Usage: credsafe init

Sets up the credsafe database at location \$CREDSAFE_ROOT, which currently
defaults to '~/.credsafe'."

;;

"list"|"ls")
  echo "Usage: credsafe ls [prefix]

List all stored credentials. Optionally, specify a prefix and list only those
credentials matching the supplied prefix string."

;;

"rm")
  echo "Usage: credsafe rm <name>

Removes the specified credential from the database."

;;

*)
  command_path="$(command -v "credsafe-$1" || true)"
  if [ -n "$command_path" ]; then
    echo "Sorry, the \`$1' command isn't documented yet."
    echo
    echo "You can view the command's source here:"
    echo "$command_path"
    echo
  else
    echo "credsafe: no such command \`$1'"
  fi

esac
